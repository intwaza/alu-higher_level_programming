The ``text_indentation`` module
==============================

Using ``text_indentation``
-------------------------

Importing the function from the module:
    >>> text_indentation = __import__('5-text_indentation').text_indentation

Now use it:

Basic usage with period:
    >>> text_indentation("Hello.")
    Hello.
    <BLANKLINE>

Basic usage with question mark:
    >>> text_indentation("Hello?")
    Hello?
    <BLANKLINE>

Basic usage with colon:
    >>> text_indentation("Hello:")
    Hello:
    <BLANKLINE>

Multiple sentences:
    >>> text_indentation("First. Second? Third:")
    First.
    <BLANKLINE>
    Second?
    <BLANKLINE>
    Third:
    <BLANKLINE>

Text with spaces:
    >>> text_indentation("  Hello.  World?  ")
    Hello.
    <BLANKLINE>
    World?
    <BLANKLINE>

Text ending without special character:
    >>> text_indentation("Hello. World")  # doctest: +NORMALIZE_WHITESPACE
    Hello.
    <BLANKLINE>
    World

Empty string:
    >>> text_indentation("")

Only spaces:
    >>> text_indentation("   ")

Text with only special characters:
    >>> text_indentation("...")
    .
    <BLANKLINE>
    .
    <BLANKLINE>
    .
    <BLANKLINE>

Text with newlines in input:
    >>> text_indentation("Hello.\nWorld?")
    Hello.
    <BLANKLINE>
    
    World?
    <BLANKLINE>

Leading and trailing spaces around special chars:
    >>> text_indentation("  Hello  .  World  ?  End  ")
    Hello  .
    <BLANKLINE>
    World  ?
    <BLANKLINE>
    End

Special characters with no text:
    >>> text_indentation(".")
    .
    <BLANKLINE>

Multiple spaces between words:
    >>> text_indentation("Hello     world.    Test     case?")
    Hello     world.
    <BLANKLINE>
    Test     case?
    <BLANKLINE>

Error case - not a string (integer):
    >>> text_indentation(42)
    Traceback (most recent call last):
    TypeError: text must be a string

Error case - not a string (None):
    >>> text_indentation(None)
    Traceback (most recent call last):
    TypeError: text must be a string

Error case - not a string (list):
    >>> text_indentation(["Hello", "World"])
    Traceback (most recent call last):
    TypeError: text must be a string

Error case - not a string (float):
    >>> text_indentation(3.14)
    Traceback (most recent call last):
    TypeError: text must be a string
